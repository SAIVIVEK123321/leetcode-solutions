---
comments: true
difficulty: Easy
edit_url: https://github.com/SAIVIVEK123321/LeetCode_Problems/edit/main/1301-1400/1304.Find%20N%20Unique%20Integers%20Sum%20up%20to%20Zero/README.md
rating: 1200
source: LeetCode Problem 1304
tags:
    - Math
    - Array
---

<!-- problem:start -->

# [1304. Find N Unique Integers Sum up to Zero](https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/)

## Problem Statement

Given an integer `n`, return any array containing `n` unique integers such that they add up to `0`.

---

## Example 1
**Input:**
n = 5

makefile
Copy code
**Output:**
[-7,-1,1,3,4]

yaml
Copy code
Other valid answers: `[-5,-1,1,2,3]`, `[-3,-1,2,-2,4]`.

---

## Example 2
**Input:**
n = 3

makefile
Copy code
**Output:**
[-1,0,1]

yaml
Copy code

---

## Example 3
**Input:**
n = 1

makefile
Copy code
**Output:**
[0]

yaml
Copy code

---

## Constraints
- `1 <= n <= 1000`

---

## Solutions

### Python3
```python
class Solution:
    def sumZero(self, n: int) -> list[int]:
        return [i * 2 - n + 1 for i in range(n)]
Java
java
Copy code
class Solution {
    public int[] sumZero(int n) {
        int[] ans = new int[n];
        for (int i = 0; i < n; i++) {
            ans[i] = i * 2 - n + 1;
        }
        return ans;
    }
}
C++
cpp
Copy code
class Solution {
 public:
  vector<int> sumZero(int n) {
    vector<int> ans(n);
    for (int i = 0; i < n; ++i)
      ans[i] = i * 2 - n + 1;
    return ans;
  }
};
JavaScript
javascript
Copy code
class Solution {
    sumZero(n) {
        let ans = [];
        for (let i = 0; i < n; i++) {
            ans.push(i * 2 - n + 1);
        }
        return ans;
    }
}
C#
csharp
Copy code
class Solution {
    public int[] SumZero(int n) {
        int[] ans = new int[n];
        for (int i = 0; i < n; i++) {
            ans[i] = i * 2 - n + 1;
        }
        return ans;
    }
}
Complexity Analysis
Time Complexity: O(n)

Space Complexity: O(1) (excluding output array)

<!-- problem:end -->



